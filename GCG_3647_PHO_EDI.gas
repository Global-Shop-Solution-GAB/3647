Program.Sub.ScreenSU.Start
gui.Form1..create
gui.Form1..caption("Phoenix Manufacturing EDI Upload")
gui.Form1..size(6450,2295)
gui.Form1..minx(0)
gui.Form1..miny(0)
gui.Form1..position(0,0)
gui.Form1..event(unload,form1_unload)
gui.Form1..alwaysontop(False)
gui.Form1..fontname("Arial")
gui.Form1..fontsize(8)
gui.Form1..forecolor(0)
gui.Form1..fontstyle(,,,,)
gui.Form1..BackColor(-2147483633)
gui.Form1..controlbox(True)
gui.Form1..maxbutton(True)
gui.Form1..minbutton(True)
gui.Form1..mousepointer(0)
gui.Form1..moveable(True)
gui.Form1..sizeable(True)
gui.Form1..ShowInTaskBar(True)
gui.Form1..titlebar(True)
gui.Form1.lblFile.create(label,"Import File",True,1935,255,1,200,200,True,0,Arial,8,-2147483633,0)
gui.Form1.lblFile.defaultvalue("")
gui.Form1.lblFile.controlgroup(0)
gui.Form1.txtFile.create(textbox,"",True,5460,300,0,100,400,True,0,Arial,8,-2147483643,1)
gui.Form1.txtFile.defaultvalue("")
gui.Form1.txtFile.controlgroup(0)
gui.Form1.cmdBrowser.create(button)
gui.Form1.cmdBrowser.caption("^")
gui.Form1.cmdBrowser.visible(True)
gui.Form1.cmdBrowser.size(350,350)
gui.Form1.cmdBrowser.zorder(0)
gui.Form1.cmdBrowser.position(5700,390)
gui.Form1.cmdBrowser.enabled(True)
gui.Form1.cmdBrowser.fontname("Arial")
gui.Form1.cmdBrowser.fontsize(8)
gui.Form1.cmdBrowser.event(click,cmdbrowser_click)
gui.Form1.cmdBrowser.defaultvalue("")
gui.Form1.cmdBrowser.controlgroup(0)
gui.Form1.cmdOK.create(button)
gui.Form1.cmdOK.caption("OK")
gui.Form1.cmdOK.visible(True)
gui.Form1.cmdOK.size(855,375)
gui.Form1.cmdOK.zorder(0)
gui.Form1.cmdOK.position(100,1200)
gui.Form1.cmdOK.enabled(True)
gui.Form1.cmdOK.fontname("Arial")
gui.Form1.cmdOK.fontsize(8)
gui.Form1.cmdOK.event(click,cmdok_click)
gui.Form1.cmdOK.defaultvalue("")
gui.Form1.cmdOK.controlgroup(0)


Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
'Variable.UDT.uSOLines.Define("sPrevID",String)
'Variable.UDT.uSOLines.Define("sOrderID",String)
'Variable.UDT.uSOLines.Define("sItemId",String)
'Variable.UDT.uSOLines.Define("sSchLineID",String)
'Variable.UDT.uSOLines.Define("sProdID",String)
'Variable.UDT.uSOLines.Define("dReqShipDate",Date)
'Variable.UDT.uSOLines.Define("dDeliverDate",Date)
'Variable.UDT.uSOLines.Define("fReqQty",Float)
'Variable.UDT.uSOLines.Define("dConfShipDate",Date)
'Variable.UDT.uSOLines.Define("fConfQty",Float)
'Variable.UDT.uSOLines.Define("sUM",String)
'Variable.UDT.uSOLines.Define("sRCode",String)
'Variable.UDT.uSOLines.Define("sConfirm",String)
'Variable.UDT.uSOLines.Define("sStatus",String)
'Variable.uGlobal.uSOLine.Declare("uSOLines")
Variable.UDT.uSOLines.Define("sPriority",String)
Variable.UDT.uSOLines.Define("sProdID",String)
Variable.UDT.uSOLines.Define("fReqQty",Float)
Variable.UDT.uSOLines.Define("sOrderID",String)
Variable.UDT.uSOLines.Define("sItemId",String)
Variable.UDT.uSOLines.Define("sSchLineID",String)
Variable.UDT.uSOLines.Define("sLocation",String)
Variable.UDT.uSOLines.Define("dReqShipDate",Date)
Variable.UDT.uSOLines.Define("dDeliverDate",Date)
Variable.UDT.uSOLines.Define("sCommitStatus",String)
Variable.UDT.uSOLines.Define("dConfShipDate",Date)
Variable.UDT.uSOLines.Define("sReasonCode",String)
Variable.UDT.uSOLines.Define("sComments",String)
'Variable.UDT.uSOLines.Define("sStatus",String)
Variable.uGlobal.uSOLine.Declare("uSOLines")
Variable.Global.sFileLines.Declare(String)
Variable.Global.sPart.Declare(String)
Variable.Global.sLineNum.Declare(String)
Variable.Global.sHeader.Declare(String)
Variable.Global.sOrderLine.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors
'Modified Sept 2019 by TJS to accept new CSV file format.
'Created by SKC on 3/24/2016 for Phoenix Manufacturing
'The user will be able to select a csv file and then an EA850 file will be created with M lines
'This will run from a custom menu Item, and parts on the file with a sort code of SLC will not have lines created.  If a customer part xref exists then that part number will be used instead of the GSS part number.

F.Intrinsic.Control.If(V.Caller.GSSVersion,<,"2015.3")
	F.Intrinsic.UI.Msgbox("Please update to version 2015.3!","Version Error")
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf

V.Local.sError.Declare(String)

F.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)

Gui.Form1..Show

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3647_PHO_EDI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Main.End

program.sub.form1_unload.start
F.Intrinsic.Control.SetErrorHandler("form1_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.ODBC.Connection!conx.Close

F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("form1_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3647_PHO_EDI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
Function.Intrinsic.Control.EndIf
program.sub.form1_unload.end

program.sub.cmdok_click.start
F.Intrinsic.Control.SetErrorHandler("cmdok_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sData.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sSavePath.Declare(String)
V.Local.sElements.Declare(String)
V.Local.sOrds.Declare(String)
'V.Local.sLineNum.Declare(String)
V.Static.sHeader.Declare(String)
V.Local.sLines.Declare(String)
V.Local.sMLine.Declare(String)
'V.Local.sFileLines.Declare(String)
V.Local.sSql.Declare(String)
V.Local.sQty.Declare(String)
V.Local.sDate.Declare(String)
V.Static.sPO.Declare(String)
V.Local.sSort.Declare(String)
'V.Local.sPart.Declare(String)
V.Local.sPrevQty.Declare(String)
V.Local.sTotalMLine.Declare(String)
V.Static.iCount.Declare(Long)
V.Local.iLen.Declare(Long)
V.Local.iPOLen.Declare(Long)
V.Local.iOrd.Declare(Long)
V.Local.fQty.Declare(Float)
V.Local.iCount.Declare(Long)
V.Local.bFlag.Declare(Boolean)
V.Local.iUBound.Declare(Long)

Gui.Form1..Visible(False)

V.Local.sFile.Set(V.Screen.Form1!txtFile.Text)
'V.Local.sElements.Set("sPrevID*!*sOrderID*!*sItemID*!*sSchLineID*!*sProdID*!*dReqShipDate*!*dDeliverDate*!*fReqQty*!*dConfShipDate*!*fConfQty*!*sUM*!*sRCode*!*sConfirm*!*sStatus")
'V.Local.sOrds.Set("0*!*1*!*2*!*3*!*4*!*5*!*6*!*7*!*8*!*9*!*10*!*11*!*12*!*13")
V.Local.sElements.Set("sPriority*!*sProdID*!*fReqQty*!*sOrderID*!*sItemId*!*sSchLineID*!*sLocation*!*dReqShipDate*!*dDeliverDate*!*sCommitStatus*!*dConfShipDate*!*sReasonCode*!*sComments")
V.Local.sOrds.Set("0*!*1*!*2*!*3*!*4*!*5*!*6*!*7*!*8*!*9*!*10*!*11*!*12")

F.Intrinsic.File.File2String(V.Local.sFile.Trim,V.Local.sData)

F.Intrinsic.Variable.LoadUDTFromString(V.uGlobal.uSOLine,V.Local.sElements,V.Local.sData,V.Ambient.NewLine,",",False)
'F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uSOLine!sPrevID,"")
F.Intrinsic.Variable.UDTFlagOrdinal(V.uGlobal.uSOLine,True,V.Local.sOrds)
F.Intrinsic.Variable.UDTDeleteFlagged(V.uGlobal.uSOLine)
F.Intrinsic.Variable.UDTMultiFlag(V.uGlobal.uSOLine!sProdID,"")
F.Intrinsic.Variable.UDTDeleteFlagged(v.uGlobal.uSOLine)
F.Intrinsic.Variable.UDTMultiQuickSort(V.uGlobal.uSOLine!sOrderID,False,V.uGlobal.uSOLine!sProdID,False,V.uGlobal.uSOLine!sItemID,False,V.uGlobal.uSOLine!dDeliverDate,False)
'Preset the needed values.
V.Global.sLineNum.Set("0")
'V.Global.sPart.Set(V.uGlobal.uSOLine(0)!sProdID)
F.Intrinsic.Math.Add(V.Global.sLineNum,1,V.Global.sLineNum)
F.Intrinsic.String.LPad(V.Global.sLineNum,"0",3,V.Global.sLineNum)
v.uGlobal.uSOLine.RedimPreserve(0,v.uGlobal.uSOLine.UBound++)

V.Local.iUBound.Set(V.uGlobal.uSOLine.UBound)

F.Intrinsic.Control.For(V.Local.iCount,0,V.Local.iUBound,1)
	F.Intrinsic.Control.If(V.uGlobal.uSOLine(v.Local.iCount)!sProdID.Trim,<>,"")
		F.Intrinsic.String.Build("Select Code_Sort from Inventory_Mstr where part = '{0}'",c,V.Local.sSql)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSort)
	
		F.Intrinsic.Control.If(V.Local.sSort.Trim,!=,"SLC")
			V.Global.sPart.Set(V.uGlobal.uSOLine(V.Local.iCount)!sProdID)
			V.Global.sOrderLine.Set(V.uGlobal.uSOLine(V.Local.iCount)!sItemID)
			V.Local.iCount.Set(V.uGlobal.uSOLine.UBound)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCount)

F.Intrinsic.Control.For(V.Static.iCount,0,V.Local.iUBound,1)
	'F.Intrinsic.Control.If(V.uGlobal.uSOLine(v.Static.iCount)!sProdID.Trim,<>,"")
		F.Intrinsic.String.Build("Select Code_Sort from Inventory_Mstr where part = '{0}'",V.uGlobal.uSOLine(v.Static.iCount)!sProdID,V.Local.sSql)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.sSort)
		F.Intrinsic.Control.If(V.Local.sSort.Trim,!=,"SLC")
			'checkthevalueofsortcode
	'			CreatetheEDIfile
			F.Intrinsic.Control.CallSub(Mlines,"iCount",V.Static.iCount)
		F.Intrinsic.Control.EndIf
	'F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.static.iCount)

'Save file to the Global\\Files Directory with a Name of EA850@@@ with @ being the Company Code
F.Intrinsic.String.Build("{0}\EA850{1}",V.Caller.FilesDir,V.Caller.CompanyCode,V.Local.sSavePath)

F.Intrinsic.File.String2File(V.Local.sSavePath,V.Global.sFileLines)
F.Global.General.CallWrapperSync(50,"ORD040GI")
F.Global.General.CallWrapperSync(50,"ORD045GI")
F.Intrinsic.Control.CallSub(Form1_unload)
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdok_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3647_PHO_EDI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf
program.sub.cmdok_click.end

program.sub.cmdbrowser_click.start
F.Intrinsic.Control.SetErrorHandler("cmdbrowser_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sPath.Declare(String)

F.Intrinsic.UI.ShowOpenFileDialog("","csv|*.csv",V.Caller.FilesDir,V.Local.sPath)
	F.Intrinsic.Control.If(V.Local.sPath,!=,"***CANCEL***")
	Gui.Form1.txtFile.Text(V.Local.sPath)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdbrowser_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3647_PHO_EDI.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf
program.sub.cmdbrowser_click.end

Program.Sub.MLines.Start

V.Local.sDate.Declare(String)
V.Local.sMLine.Declare(String)
V.Local.sQty.Declare(String)
V.Local.sLines.Declare(String)
V.Static.bFlag.Declare(Boolean)
V.Static.fQty.Declare(Float)
V.Static.iOrd.Declare(Long)
V.Local.iLen.Declare(Long)

V.Static.sTotalMLine.Declare(String)

F.Intrinsic.Control.If(V.uGlobal.uSOLine(v.ARGS.iCount)!sProdID,!=,V.Global.sPart,"OR",V.uGlobal.uSOLine(V.Args.iCount)!sItemID,<>,V.Global.sOrderLine)
	F.Intrinsic.Control.CallSub(Llines,"iOrd",V.Static.iOrd,"sTotalMLine",V.Static.sTotalMLine,"fQty",V.Static.fQty,"iCount",V.Args.iCount)
	V.Static.bFlag.Set(False)
	V.Static.fQty.Set(0)
	V.Static.sTotalMLine.Set("")
	V.Global.sPart.Set(V.uGlobal.uSOLine(v.ARGS.iCount)!sProdID.Trim)
	V.Global.sOrderLine.Set(V.uGlobal.uSOLine(V.Args.iCount)!sItemID)
	F.Intrinsic.Math.Add(V.Global.sLineNum,1,V.Global.sLineNum)
	F.Intrinsic.String.LPad(V.Global.sLineNum,"0",3,V.Global.sLineNum)
F.Intrinsic.Control.EndIf

'Set Flag
F.Intrinsic.Control.If(V.Static.bFlag,=,False)
	V.Static.iOrd.Set(V.ARGS.iCount)
	V.Static.bFlag.Set(True)
F.Intrinsic.Control.EndIf

'dont create the mLines if blank part
F.Intrinsic.Control.If(V.uGlobal.uSOLine(v.Args.iCount)!sProdID,!=,"")
'Cust
	F.Intrinsic.String.RPad("UTAS"," ",35,V.Local.sMLine)
	'PO
	F.Intrinsic.String.Build("{0}{1}",V.Local.sMLine,V.uGlobal.uSOLine(V.ARGS.iCount)!sOrderID.Trim,V.Local.sMLine)
	F.Intrinsic.String.RPad(V.Local.sMLine," ",50,V.Local.sMLine)
	'LineNumber must match the 1 Record
	F.Intrinsic.String.Build("{0}{1}",V.Local.sMLine,V.Global.sLineNum,V.Local.sMLine)
	F.Intrinsic.String.RPad(V.Local.sMLine," ",66,V.Local.sMLine)
	'running Line Qty
	F.Intrinsic.Math.Add(V.Static.fQty,V.uGlobal.uSOLine(v.ARGS.iCount)!fReqQty,V.Static.fQty)
	'Format Qty
	F.Intrinsic.String.Split(V.uGlobal.uSOLine(v.ARGS.iCount)!fReqQty,".",V.Local.sQty)
	V.Local.sQty.RedimPreserve(0,1)
	F.Intrinsic.String.LPad(V.Local.sQty(0),"0",8,V.Local.sQty(0))
	F.Intrinsic.String.RPad(V.Local.sQty(1),"0",4,V.Local.sQty(1))
	F.Intrinsic.String.Build("{0}{1}",V.Local.sQty(0),V.Local.sQty(1),V.Local.sQty(0))
	F.Intrinsic.String.Build("{0}{1}",V.Local.sMLine,V.Local.sQty,V.Local.sMLine)
	F.Intrinsic.String.RPad(V.Local.sMLine," ",86,V.Local.sMLine)
	'Fromat Date
	F.Intrinsic.String.Format(V.uGlobal.uSOLine(v.ARGS.iCount)!dReqShipDate,"YYYYMMDD",V.Local.sDate)
	'Date
	F.Intrinsic.String.Build("{0}{1}",V.Local.sMLine,V.Local.sDate,V.Local.sMLine)
	F.Intrinsic.String.RPad(V.Local.sMLine," ",94,V.Local.sMLine)
	'Firm
	F.Intrinsic.String.Build("{0}F",V.Local.sMLine,V.Local.sMLine)
	F.Intrinsic.String.RPad(V.Local.sMLine," ",510,V.Local.sMLine)
	'M record
	F.Intrinsic.String.Build("{0}M ",V.Local.sMLine,V.Local.sMLine)
	'Add to the M Line collection since there can be multiple
	F.Intrinsic.String.Build("{0}{1}{2}",V.Static.sTotalMLine,V.Local.sMLine,V.Ambient.NewLine,V.Static.sTotalMLine)
F.Intrinsic.Control.EndIf


Program.Sub.MLines.End

Program.Sub.LLines.Start
V.Local.sLines.Declare(String)
V.Local.sQty.Declare(String)
V.Local.sDate.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sHeader.Declare(String)
V.Static.sTempLIne.Declare(String)
V.Local.iLen.Declare(Long)

'Cust
F.Intrinsic.String.RPad("UTAS"," ",35,V.Local.sLines)
'PO
F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,V.uGlobal.uSOLine(V.ARGs.iOrd)!sOrderID.Trim,V.Local.sLines)
F.Intrinsic.String.RPad(V.Local.sLines," ",50,V.Local.sLines)
'LineNumber must match the 1 Record, and part
F.Intrinsic.String.Build("{0}{1} {2}",V.Local.sLines,V.Global.sLineNum,V.uGlobal.uSOLine(v.Args.iOrd)!sProdID,V.Local.sLines)
F.Intrinsic.String.RPad(V.Local.sLines," ",76,V.Local.sLines)
'Running Qty
F.Intrinsic.String.Split(V.Args.fQty,".",V.Local.sQty)
V.Local.sQty.RedimPreserve(0,1)
F.Intrinsic.String.LPad(V.Local.sQty(0),"0",8,V.Local.sQty(0))
F.Intrinsic.String.RPad(V.Local.sQty(1),"0",4,V.Local.sQty(1))
F.Intrinsic.String.Build("{0}{1}",V.Local.sQty(0),V.Local.sQty(1),V.Local.sQty(0))
F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,V.Local.sQty,V.Local.sLines)
F.Intrinsic.String.RPad(V.Local.sLines," ",225,V.Local.sLines)
'PO Line Number
F.Intrinsic.String.Len(V.uGlobal.uSOLine(v.Args.iOrd)!sItemId,V.Local.iLen)
F.Intrinsic.Math.Sub(V.Local.iLen,1,V.Local.iLen)
F.Intrinsic.String.Left(V.uGlobal.uSOLine(v.Args.iOrd)!sItemId,V.Local.iLen,V.uGlobal.uSOLine(v.Args.iOrd)!sItemId)
F.Intrinsic.String.LPad(V.uGlobal.uSOLine(v.Args.iOrd)!sItemId,"0",3,V.uGlobal.uSOLine(v.Args.iOrd)!sItemId)

F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,V.uGlobal.uSOLine(v.Args.iOrd)!sItemId,V.Local.sLines)
F.Intrinsic.String.RPad(V.Local.sLines," ",265,V.Local.sLines)
'Multi Qty and Date
F.Intrinsic.String.Format(V.uGlobal.uSOLine(v.Args.iOrd)!dReqShipDate,"YYYYMMDD",V.Local.sDate)
F.Intrinsic.String.Build("{0}Y{1}",V.Local.sLines,V.Local.sdate,V.Local.sLines)
F.Intrinsic.String.RPad(V.Local.sLines," ",474,V.Local.sLines)
'Prom Date
F.Intrinsic.String.Build("{0}{1}",V.Local.sLines,V.Local.sDate,V.Local.sLines)
F.Intrinsic.String.RPad(V.Local.sLines," ",510,V.Local.sLines)
'1 Line
F.Intrinsic.String.Build("{0}1 ",V.Local.sLines,V.Local.sLines)
F.Intrinsic.String.Build("{0}{2}{1}{3}",V.Static.sTempLine,V.Ambient.NewLine,V.Local.sLines,V.Args.sTotalMLine,V.Static.sTempLine)
'build the string for the file  this will have the Header, 1, and M records
F.Intrinsic.Control.If(V.uGlobal.uSOLine(v.Args.iCount)!sOrderID,!=,V.uGlobal.uSOLine(v.Args.iOrd)!sOrderID)
	'Cust
	F.Intrinsic.String.RPad("UTAS"," ",35,V.Local.sHeader)
	'PO
	F.Intrinsic.String.Build("{0}{1}",V.Local.sHeader,V.uGlobal.uSOLine(V.Args.iOrd)!sOrderID.Trim,V.Local.sHeader)
	F.Intrinsic.String.RPad(V.Local.sHeader," ",50,V.Local.sHeader)
	F.Intrinsic.String.Build("{0}000",V.Local.sHeader,V.Local.sHeader)
	F.Intrinsic.String.RPad(V.Local.sHeader," ",510,V.Local.sHeader)
	F.Intrinsic.String.Build("{0}H ",V.Local.sHeader,V.Local.sHeader)
	V.Global.sLineNum.Set("0")
	F.Intrinsic.String.Build("{0}{2}{1}{3}",V.Global.sFileLines,V.Ambient.NewLine,V.Local.sHeader,V.Static.sTempLIne,V.Global.sFileLines)
	V.Static.sTempLIne.Set("")
F.Intrinsic.Control.EndIf

Program.Sub.LLines.End

Program.Sub.Comments.Start
${$0$}$GCG_3647_PHO_EDI$}$SKC$}$3/21/2016
Program.Sub.Comments.End

